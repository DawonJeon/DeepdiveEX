var x = 1;
const y = 2;
function foo (a) {
    var x = 3;
    const y = 4;
        function bar (b) {
        const z = 5;
        console.log(a + b + x + y + z);
        }
    bar(10); // ← 호출 직전
}

foo(20);

/**
 * 전역 렉시컬 환경 = 객체 환경 레코드 + 선언적 환경 레코드 
 * console 식별자는 객체 환경 레코드의 BindingObject를 통해 전역 객체에서 찾을 수 있음
 */

/**
 * bar 함수코드의 실행이 종료되면
 * bar 함수 실행 컨텍스트가 제거
 * 그러나 실행 컨텍스트가 제거되었다고 bar함수의 렉시컬 환경까지 즉시 소멸은 아니다. 
 * 렉시컬 환경은 실행컨텍스트에 의해 참조되지만 독립적인 객체이다
 * 
 * 
 * bar -> foo 함수가 모두 종료되면
 * 더는 실행할 전역 코드가 없으므로
 * 전역 코드의 실행이 종료되고
 * 전역 실행 컨텍스트도 스택에서 팝되어 
 * 실행 컨텍스트 스택에는 아무것도 남아 있지 않게 됨 
 */

 let x = 1;
 if (true) {
  let x = 10;
  console.log(x); // 10
 }
 console.log(x); // 1

 /**새롭게 생성된 if문 코드블록의 렉시컬환경의
  * 외부렉시컬 환경에 대한 참조는
  * if문 실행이전의 전역 렉시컬 환경을 가리킴 
  */

 /**for문의 변수선언문에
  * let키워드를 사용한 for문은
  * 코드블록이 반복해서 실행될때마다
  * 새로운 렉시컬 환경을 생성함
  */